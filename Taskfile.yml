version: '3'

vars:
  APP_NAME: cloudylist
  VERSION: "0.1.0"
  MIN_COVERAGE: 85

tasks:
  info:
    cmds:
      - echo "========================================"
      - echo "App Name={{.APP_NAME}}"
      - echo "Version={{.VERSION}}"
      - echo "Min Test Coverage={{.MIN_COVERAGE}}"
      - echo "========================================"
    silent: true

  install:
    desc: Install dependencies using Poetry
    cmds:
      - poetry install

  test:
    desc: Run unit tests
    cmds:
      - poetry run pytest tests --cov=cloudylist --cov-report=term-missing --cov-fail-under={{.MIN_COVERAGE}}

  build:
    desc: Build the production Docker image
    cmds:
      - docker build --target production -t cloudylist:latest .

  build-test:
    desc: Build the testing Docker image
    cmds:
      - docker build --target testing -t cloudylist:test .

  docker-tests:
    desc: Run unit tests inside the testing Docker container
    depends_on:
      - build-test
    cmds:
      - docker run --rm cloudylist:test

  lint:
    desc: "Run linters"
    cmds:
      - poetry run ruff check

  fmt:
    desc: "Format code using Black"
    cmds:
      - poetry run ruff format

  sec:
    desc: "Run security checks"
    cmds:
      - poetry run bandit ./{{.PROJECT_NAME}}
      - poetry run pyt -a D ./{{.PROJECT_NAME}}

  show-inventory-table:
    desc: "Show the inventory of the project as a table"
    cmds:
      - poetry run cloudylist show-inventory --format table

  show-inventory-json:
    desc: "Show the inventory of the project as JSON"
    cmds:
      - poetry run cloudylist show-inventory --format json

